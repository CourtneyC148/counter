{"version":3,"sources":["CountUp.js","CountDown.js","Input.js","App.js","reportWebVitals.js","index.js"],"names":["CountUp","addOne","className","onClick","CountDown","takeAwayOne","Input","state","count","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","userInput","onSubmit","this","onChange","type","placeholder","Component","App","number","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAUeA,EARC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChB,OACE,qBAAKC,UAAU,OAAf,SACE,wBAAQA,UAAU,OAAOC,QAASF,EAAlC,yBCKSG,EARG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAChB,OACI,qBAAKH,UAAU,OAAf,SACI,wBAAQA,UAAU,OAAOC,QAASE,EAAlC,2BC4BGC,E,4MA9BXC,MAAQ,CACJC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVH,MAAOE,EAAEE,OAAOC,S,EAIxBC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,UAAU,EAAKV,MAAMC,OAChC,EAAKG,SAAS,CACXH,MAAO,M,uDAKV,OACA,qBAAKN,UAAU,iBAAf,SACI,uBAAMgB,SAAUC,KAAKL,aAArB,UACI,uBAAOZ,UAAU,QAAQkB,SAAUD,KAAKV,aAAcI,MAAOM,KAAKZ,MAAMC,MAAOa,KAAK,OAAOC,YAAY,sBACvG,wBAAQpB,UAAU,OAAlB,0B,GAxBIqB,aCwCLC,E,4MApCbjB,MAAQ,CACNC,MAAO,G,EAGTP,OAAS,WACP,EAAKU,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQ,K,EAI9BH,YAAc,WACZ,EAAKM,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQ,K,EAI9BS,UAAY,SAACQ,GACX,IAAIZ,EAAQa,SAASD,GACrB,EAAKd,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQK,K,uDAK5B,OACE,sBAAKX,UAAU,YAAf,UACE,6BAAKiB,KAAKZ,MAAMC,QAChB,cAAC,EAAD,CAASP,OAAQkB,KAAKlB,SACtB,cAAC,EAAD,CAAWI,YAAac,KAAKd,cAC7B,cAAC,EAAD,CAAOY,UAAWE,KAAKF,mB,GA9BbM,aCOHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.208be272.chunk.js","sourcesContent":["import React from 'react'\n\nconst CountUp = ({addOne}) => {\n  return (\n    <div className=\"btns\">\n      <button className=\"btn1\" onClick={addOne}>Count Up</button>\n    </div>\n  )\n}\n\nexport default CountUp\n","import React from 'react'\n\nconst CountDown = ({takeAwayOne}) => {\n    return (\n        <div className=\"btns\">\n            <button className=\"btn2\" onClick={takeAwayOne}>Count Down</button>\n        </div>\n    )\n}\n\nexport default CountDown\n","import React, { Component } from 'react'\n\nclass Input extends Component {\n    state = {\n        count: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            count: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.userInput(this.state.count);\n        this.setState({\n           count: \"\"\n       });\n      }\n\n    render() {\n        return (\n        <div className=\"form-container\">\n            <form onSubmit={this.handleSubmit}>\n                <input className=\"input\" onChange={this.handleChange} value={this.state.count} type=\"text\" placeholder=\"Add a number here\" />\n                <button className=\"btn3\">ADD</button>\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default Input\n\n","import React, { Component } from 'react'\nimport CountUp from './CountUp'\nimport CountDown from './CountDown'\nimport Input from './Input'\n\nclass App extends Component {\n  state = {\n    count: 0\n  }\n\n  addOne = () => {\n    this.setState({\n      count: this.state.count + 1\n    })\n  }\n\n  takeAwayOne = () => {\n    this.setState({\n      count: this.state.count - 1\n    })\n  }\n\n  userInput = (number) => {\n    let value = parseInt(number);\n    this.setState({\n      count: this.state.count + value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>{this.state.count}</h1>\n        <CountUp addOne={this.addOne} />\n        <CountDown takeAwayOne={this.takeAwayOne} />\n        <Input userInput={this.userInput} />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}